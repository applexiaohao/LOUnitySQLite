{"name":"LOUnitySQLite","tagline":"","body":"# SQLite数据库-Unity操作\r\n\r\n**项目开发的时候，经常会遇到的一种需求，数据存储**\r\n\r\n离线缓存的数据类型很多，大致分成两类\r\n- 字符串文本数据\r\n- 多媒体数据\r\n\r\n字符串数据的类型只有字符串，但是结构有很多:\r\n-  xml\r\n- json\r\n- md5\r\n- base64\r\n-  普通字符串\r\n\r\n多媒体数据的类型:\r\n- 图片(jpg,png,gif...)\r\n- 音频(mp3,aif...)\r\n- 视频(mp4,mpv)\r\n\r\n\r\n*通常用数据库来存储字符串文本类型的数据，但是需要注意的是数据库同时也能存储多媒体类型的数据*\r\n\r\n***\r\n**关系数据库**\r\n在一个给定的应用领域中，所有实体及实体之间联系的集合构成一个关系数据库。\r\n目前主流的关系数据库有oracle、db2、sqlserver、sybase、mysql等。\r\n\r\n**在Unity中打开数据库函数**\r\n```\r\n\tprivate string GetDBPath(string name)\r\n\t{\r\n\t\treturn Application.persistentDataPath + \"/\" + name + \".sqlite\";\r\n\t}\r\n\r\n\t/// <summary>\r\n\t/// 就是用来存储程序与数据库链接的对象\r\n\t/// </summary>\r\n\tprivate SqliteConnection connection = null;\r\n\tprivate void OpenDataBase()\r\n\t{\r\n\t\t//获取一个数据库文件的路径\r\n\t\tstring path = GetDBPath (\"xiaohao\");\r\n\t\tstring c = \"Data Source=\" + path;\r\n\t\t//需要通过数据库文件磁盘路径进行初始化\r\n\t\tconnection = new SqliteConnection (c);\r\n\t\t//打开数据库\r\n\t\tconnection.Open();\r\n\t}\r\n```\r\n\r\n## CRUD\r\n\r\n***\r\n**创建表格SQL**\r\n```\r\ncreate table lo_human(human_id integer,human_name text,human_age integer);\r\n```\r\n**C#函数调用创建表格SQL**\r\n```\r\n\tprivate void CreateObject()\r\n\t{\r\n\t\t//在一个数据库链接对象上创建一个命令对象\r\n\t\tSqliteCommand command = new SqliteCommand(connection);\r\n\r\n\t\t//给命令对象添加SQL语句\r\n\t\tcommand.CommandText = \"create table if not exists lo_human(human_id integer,human_name text,human_age integer);\";\r\n\r\n\t\t//执行命令\r\n\t\tcommand.ExecuteNonQuery();\r\n\t}\r\n```\r\n***\r\n\r\n**添加数据**\r\n```\r\ninsert into lo_human(human_id,human_name,human_age) values(1,'xiaohao',36);\r\n```\r\n**C#函数调用添加数据SQL**\r\n```\r\n\tprivate void InsertObject()\r\n\t{\r\n\t\t//在一个数据库链接对象上创建一个命令对象\r\n\t\tSqliteCommand command = new SqliteCommand (connection);\r\n\r\n\t\t//给命令对象添加SQL语句\r\n\t\tcommand.CommandText = \"insert into lo_human(human_id,human_name,human_age) values(1,'xiaohao',36);\";\r\n\r\n\t\t//执行命令\r\n\t\tcommand.ExecuteNonQuery ();\r\n\t}\r\n```\r\n***\r\n\r\n**更新数据**\r\n```\r\nupdate lo_human set human_name='cuiyayun' where human_id=2;\r\n```\r\n**C#函数调用更新数据SQL**\r\n```\r\n\tprivate void UpdateObject()\r\n\t{\r\n    \t//在一个数据库链接对象上创建一个命令对象\r\n\t\tSqliteCommand command = new SqliteCommand (connection);\r\n        \r\n        //给命令对象添加SQL语句\r\n\t\tcommand.CommandText = \"update lo_human set human_name='cuiyayun' where human_id=3;\";\r\n        \r\n        //执行命令\r\n\t\tcommand.ExecuteNonQuery ();\r\n\t}\r\n```\r\n***\r\n**删除数据**\r\n```\r\ndelete from lo_human where humanid=1;\r\n```\r\n**C#函数调用删除数据SQL**\r\n```\r\n\tprivate void DeleteObject()\r\n\t{\r\n    \t//在一个数据库链接对象上创建一个命令对象\r\n\t\tSqliteCommand command = new SqliteCommand (connection);\r\n\t\t\r\n        //给命令对象添加SQL语句\r\n        command.CommandText = \"delete from lo_human where human_id=1;\";\r\n\t\t\r\n        //执行命令\r\n        command.ExecuteNonQuery ();\r\n\t}\r\n```\r\n***\r\n**查询数据**\r\n```\r\nselect * from lo_human where human_id>15 order by human_id desc;\r\n```\r\n**C#函数调用查询数据SQL**\r\n```\r\n\tprivate void SelectObject()\r\n\t{\r\n    \t//在一个数据库链接对象上创建一个命令对象\r\n\t\tSqliteCommand command = new SqliteCommand (connection);\r\n\t\t\r\n        //给命令对象添加SQL语句\r\n        command.CommandText = \"select * from lo_human where human_id>15 order by human_id desc;\";\r\n\r\n\t\t//数据读取器\r\n\t\tSqliteDataReader reader = command.ExecuteReader();\r\n\r\n\t\t//判读是否可以读取下一行数据,如果可以的话就获取数据\r\n\t\twhile (reader.Read())\r\n\t\t{\r\n\t\t\t//在循环体里,已经确定是哪行数据.\r\n\t\t\tDebug.Log(reader [\"human_name\"]);\r\n\t\t}\r\n\t}\r\n```\r\n*** ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}